version: "3.9"

networks:
  internal_net:
    driver: bridge

services:
  redis:
    image: redis:7-alpine
    container_name: rag_redis_cache
    restart: unless-stopped
    networks:
      - internal_net
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  rag_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag_query_builder_api
    restart: unless-stopped
    networks:
      - internal_net
    depends_on:
      redis:
        condition: service_healthy
    environment:
      # OpenAI Configuration
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      OPENAI_MODEL: "${OPENAI_MODEL:-gpt-4-turbo-preview}"
      OPENAI_EMBED_MODEL: "${OPENAI_EMBED_MODEL:-text-embedding-3-small}"
      
      # Application Configuration
      CORPUS_DIR: "/app/corpus"
      TOP_K: "6"
      CHUNK_SIZE: "2000"
      TIMEOUT_SECONDS: "180"
      
      # ChromaDB Configuration
      CHROMA_PERSIST_DIR: "/app/chroma"
      CHROMA_COLLECTION: "querybuilder_docs"
      
      # Cache Configuration
      CACHE_ENABLED: "true"
      CACHE_TYPE: "redis"
      REDIS_URL: "redis://redis:6379/0"
    volumes:
      - ./corpus:/app/corpus:rw
      - chroma_data:/app/chroma
      - ./main.py:/app/main.py:ro
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  chroma_data:
  redis_data: